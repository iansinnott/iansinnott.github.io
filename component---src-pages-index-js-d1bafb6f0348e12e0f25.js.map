{"version":3,"sources":["webpack:///./node_modules/ramda/src/internal/_isTransformer.js","webpack:///./node_modules/ramda/src/groupBy.js","webpack:///./node_modules/ramda/src/reduceBy.js","webpack:///./node_modules/ramda/src/keys.js","webpack:///./node_modules/ramda/src/internal/_dispatchable.js","webpack:///./node_modules/ramda/src/internal/_has.js","webpack:///./node_modules/ramda/src/map.js","webpack:///./src/components/Posts.js","webpack:///./src/pages/index.js","webpack:///./node_modules/ramda/src/internal/_map.js","webpack:///./node_modules/ramda/src/toPairs.js","webpack:///./node_modules/ramda/src/prop.js","webpack:///./node_modules/ramda/src/curryN.js","webpack:///./src/components/Posts.module.styl","webpack:///./node_modules/ramda/src/sort.js","webpack:///./node_modules/ramda/src/internal/_isArguments.js","webpack:///./node_modules/ramda/src/internal/_xmap.js","webpack:///./node_modules/ramda/src/internal/_curryN.js","webpack:///./node_modules/ramda/src/internal/_xfBase.js","webpack:///./node_modules/ramda/src/internal/_xreduceBy.js"],"names":["module","exports","obj","_checkForMethod","_curry2","reduceBy","acc","item","push","_curryN","_dispatchable","_has","_reduce","_xreduceBy","valueFn","valueAcc","keyFn","list","elt","key","hasEnumBug","nonEnumerableProps","hasArgsEnumBug","contains","_curry1","_isArguments","toString","propertyIsEnumerable","arguments","idx","length","Object","keys","prop","nIdx","ks","checkArgsLength","_isArray","_isTransformer","methodNames","xf","fn","args","Array","prototype","slice","call","pop","apply","transducer","this","hasOwnProperty","_map","_xmap","curryN","functor","cx","classnames","bind","s","getYear","pipe","x","Date","format","BlogPostListItem","post","className","to","slug","properties","title","nodesByYear","groupBy","path","toPairs","sort","a","b","renderPosts","map","year","posts","node","id","Posts","DevErrors","props","errors","err","message","JSON","stringify","BlogIndex","render","forEach","console","error","data","database","style","margin","Bio","React","Component","query","len","result","pairs","p","_arity","comparator","_xfBase","XMap","f","init","input","_isPlaceholder","received","combined","argsIdx","left","combinedIdx","_result","XReduceBy","inputs"],"mappings":"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","file":"component---src-pages-index-js-d1bafb6f0348e12e0f25.js","sourcesContent":["module.exports = function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n};","var _checkForMethod = require('./internal/_checkForMethod');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar reduceBy = require('./reduceBy');\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\n\nmodule.exports = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));","var _curryN = require('./internal/_curryN');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _has = require('./internal/_has');\n\nvar _reduce = require('./internal/_reduce');\n\nvar _xreduceBy = require('./internal/_xreduceBy');\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\n\n\nmodule.exports = _curryN(4, [], _dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _curry1 = require('./internal/_curry1');\n\nvar _has = require('./internal/_has');\n\nvar _isArguments = require('./internal/_isArguments');\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nmodule.exports = function () {\n  // cover IE < 9 keys issues\n  var hasEnumBug = !{\n    toString: null\n  }.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\n  var hasArgsEnumBug = function () {\n    'use strict';\n\n    return arguments.propertyIsEnumerable('length');\n  }();\n\n  var contains = function contains(list, item) {\n    var idx = 0;\n\n    while (idx < list.length) {\n      if (list[idx] === item) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  };\n\n  return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n    return Object(obj) !== obj ? [] : Object.keys(obj);\n  }) : _curry1(function keys(obj) {\n    if (Object(obj) !== obj) {\n      return [];\n    }\n\n    var prop, nIdx;\n    var ks = [];\n\n    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n    for (prop in obj) {\n      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n        ks[ks.length] = prop;\n      }\n    }\n\n    if (hasEnumBug) {\n      nIdx = nonEnumerableProps.length - 1;\n\n      while (nIdx >= 0) {\n        prop = nonEnumerableProps[nIdx];\n\n        if (_has(prop, obj) && !contains(ks, prop)) {\n          ks[ks.length] = prop;\n        }\n\n        nIdx -= 1;\n      }\n    }\n\n    return ks;\n  });\n}();","var _isArray = require('./_isArray');\n\nvar _isTransformer = require('./_isTransformer');\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nmodule.exports = function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n};","module.exports = function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _map = require('./internal/_map');\n\nvar _reduce = require('./internal/_reduce');\n\nvar _xmap = require('./internal/_xmap');\n\nvar curryN = require('./curryN');\n\nvar keys = require('./keys');\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nmodule.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));","import React from 'react';\nimport Link from 'gatsby-link';\nimport pipe from 'ramda/src/pipe';\nimport prop from 'ramda/src/prop';\nimport path from 'ramda/src/path';\nimport sort from 'ramda/src/sort';\nimport toPairs from 'ramda/src/toPairs';\nimport map from 'ramda/src/map';\nimport reduce from 'ramda/src/reduce';\nimport groupBy from 'ramda/src/groupBy';\nimport classnames from 'classnames/bind';\n\nimport s from './Posts.module.styl';\nimport { format } from '../lib/utils.js';\nconst cx = classnames.bind(s);\n\nconst formatDate = pipe(\n  (x) => new Date(x),\n  format('YYYY-MM-DD'), // Format tbd\n);\n\n// Turn a date string (string! not date) into it's string year representation\nconst getYear = pipe((x) => new Date(x), format('YYYY'));\n\nconst BlogPostListItem = ({ post }) => (\n  <div className={cx('BlogPostListItem')}>\n    <Link to={`/${post.slug}/`}>\n      <span>{post.properties.title}</span>\n    </Link>\n  </div>\n);\n\n// Operate on date first. Need an array of arrays where each array represents\n// all the posts for a given year. So I can group by year using date-fns and\n// created.\n// NOTE: Sort then reverse is not the most efficient\nconst nodesByYear = pipe(\n  groupBy(pipe(path(['properties', 'created']), getYear)), // Group by year published\n  toPairs, // Use tuple form\n  sort((a, b) => (a[0] < b[0] ? 1 : -1)), // Sort by string year, latest first\n);\n\nconst renderPosts = pipe(\n  prop('edges'),\n  map(prop('node')),\n  nodesByYear,\n  map(([year, posts]) => (\n    <div key={year} className={cx('postsByYear')}>\n      <div className={cx('year')}>{year}</div>\n      <div className={cx('innerPosts')}>\n        {posts.map((node) => (\n          <BlogPostListItem post={node} key={node.id} />\n        ))}\n      </div>\n    </div>\n  )),\n);\n\nconst Posts = ({ posts }) => (\n  <div className={cx('Posts')}>{renderPosts(posts)}</div>\n);\n\nexport default Posts;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Posts from '../components/Posts.js';\nimport Bio from '../components/Bio.js';\nimport Layout from '../layouts';\n\nconst toJSON = (x) => JSON.stringify(x, null, 2);\n\nconst DevErrors = (props) => (\n  <div>\n    <h1>Errors happened</h1>\n    {props.errors.map((err) => (\n      <div key={err.message}>\n        <p>{err.message}</p>\n        <pre>{toJSON(err)}</pre>\n      </div>\n    ))}\n  </div>\n);\n\nexport default class BlogIndex extends React.Component {\n  render() {\n    if (this.props.errors && this.props.errors.length) {\n      this.props.errors.forEach(({ message }) => {\n        console.error(`BlogIndex render errr: ${message}`);\n      });\n      return DevErrors(this.props);\n    }\n\n    return (\n      <Layout>\n        <h2>Some things I wrote</h2>\n        <Posts posts={this.props.data.database} />\n        <hr style={{ margin: '3rem auto' }} />\n        <Bio />\n      </Layout>\n    );\n  }\n}\n\n/**\n * NOTE: Only \"published\" posts are included in the query because they have\n * filenames of the form YYYY-MM-DD-title.md. The filtering regex matches\n * against this, so any md files without a date in the filename are not included\n * (they are considered drafts).\n *\n * TODO: I added a published field in published posts but it's not getting\n * picked up by gql. I'll just keep on working sorting by created for now since\n * I want to get the blog out, but it's something worth looking in to later on.\n * Maybe after Gatsby v2.\n *\n * NOTE: Prettier removes escape sequences in the regex string for some reason,\n * causing a GQL compile error... need to have prettier ignore it.\n */\nexport const query = graphql`\n  query AllPostsQuery {\n    database: allNotionCollectionPosts(\n      sort: { fields: properties___created, order: DESC }\n      filter: { properties: { status: { in: [\"published\", \"staged\"] } } }\n    ) {\n      edges {\n        node {\n          id\n          slug\n          properties {\n            title\n            created\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n};","var _curry1 = require('./internal/_curry1');\n\nvar _has = require('./internal/_has');\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nmodule.exports = _curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});","var _curry2 = require('./internal/_curry2');\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\n\nmodule.exports = _curry2(function prop(p, obj) {\n  return obj[p];\n});","var _arity = require('./internal/_arity');\n\nvar _curry1 = require('./internal/_curry1');\n\nvar _curry2 = require('./internal/_curry2');\n\nvar _curryN = require('./internal/_curryN');\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\n\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BlogPostListItem\":\"Posts-module--BlogPostListItem--2CzbJ\",\"date\":\"Posts-module--date--3Q6sy\",\"postsByYear\":\"Posts-module--postsByYear--3lHZy\",\"year\":\"Posts-module--year--2n8vJ\"};","require(\"core-js/modules/es6.array.sort\");\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,a -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\n\nmodule.exports = _curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nvar _has = require('./_has');\n\nmodule.exports = function () {\n  var toString = Object.prototype.toString;\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();","var _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return _curry2(function _xmap(f, xf) {\n    return new XMap(f, xf);\n  });\n}();","var _arity = require('./_arity');\n\nvar _isPlaceholder = require('./_isPlaceholder');\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nmodule.exports = function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n};","module.exports = {\n  init: function init() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function result(_result) {\n    return this.xf['@@transducer/result'](_result);\n  }\n};","var _curryN = require('./_curryN');\n\nvar _has = require('./_has');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n    return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n  });\n}();"],"sourceRoot":""}