{"componentChunkName":"component---src-templates-post-js","path":"/editor-overload/","result":{"data":{"post":{"canonicalURL":"https://blog.iansinnott.com/editor-overload/","content_html":"<p>Every so often my programming productivity takes a steep dive as I try to use a new text editor. </p>\n<p>Why do I put myself through this? Simply put, I&#39;m a bit of an efficiency fanatic. Fanatic in the sense of pursuing some end with not-entirely-rational vigor and passion. I call it fanatical because the pursuit of ever more efficiency in and of itself takes quite a bit of time, thus actively working against my ostensible goal of being more productive.</p>\n<p>Whatever, it&#39;s a hobby.</p>\n<h1>A History of Ian&#39;s Text Editors</h1>\n<p>Let&#39;s make a timeline. </p>\n<h2><code >2011</code> Dreamweaver</h2>\n<p>Oh yeah, I started there. This was when I first started learning web development and thought to myself &quot;It&#39;s just text and images, how much harder than Word could it be?&quot;</p>\n<p>I&#39;m not putting Dreamweaver down‚Äîit was actually a very good start. There were professional video tutorials about it since it was part of the Adobe suite. It even had code mode, which is just like any normal text editor.</p>\n<p>However, it was not to last. Even with code mode I felt like I wasn&#39;t a <span class=\"italic\">programmer</span>, whatever that meant. I felt like I needed more of a hacker-ish interface on which to work my magic. </p>\n<h2><code >2011</code> Coda</h2>\n<p>Yes, same year as Dreamweaver. After a bit of Dreamweaver I discovered Coda, a pretty nifty text editor that&#39;s <a href=\"https://www.panic.com/coda/\">still around</a> (as of 2020-08-20). Why do I say that as if it&#39;s a big deal? Well, I&#39;d be surprised if anyone who started programming after 2013 knows about it. This is not to say anything bad about the product, I just never met a single other programmer who had used it.</p>\n<p>The cool feature that drew me in to Coda was that it could know about your websites. As far as I remember it was pitched as a great editor for creating front-end sites (JS, CSS, HTML). Back then my move was to write some code, open an FTP app and then drag/drop the files into it. Coda handled this nicely and saved me time. </p>\n<h2><code >2013</code> Sublime Text</h2>\n<p>Then, the programming world collectively gasps as Sublime Text 2 sweeps over the industry (* I doubt the Vim/Emacs people cared much, but as  you can see I was not yet among their numbers).</p>\n<p>Sublime Text was just <span class=\"italic\">awesome</span>. It was <span class=\"italic\">fast</span>. It was minimal yet powerful which appealed to the power user in me. It was <span class=\"bold\">not</span> intuitive, it was <span class=\"bold\">not</span> discoverable, it was configured via JSON! It was exactly what I wanted.</p>\n<p>For two whole years Sublime Was my primary editor and it was great. Along the way it taught me the power of dedicated tools, rather than an integrated suite. I used different apps for my terminal, my FTP client and my editor. </p>\n<p>Of course my time with Sublime and the productivity it won me made me want more, and thus paved the way towards the black hole of text editors, the editor form which‚Äîonce you have learned it‚Äîyou will never fully detach yourself.</p>\n<h2><code >2015</code> Vim</h2>\n<p>In 2015 it finally clicked. This was something of a watershed moment in my text editing career. After years of false starts Vim finally took hold of my fingertips and things have never been the same since.</p>\n<div class=\"callout\">For anyone unaware, Vim is an ancient text editor from the 70s¬π that might already be installed on your computer. It&#39;s claim to fame is that it let&#39;s you edit <span class=\"italic\">any text</span> with only the keyboard. No mouse interaction whatsoever. </div>\n<p>Vim is hard to learn. Significantly harder than learning touch-typing. Anyone who already knows how to program but does&#39;t know Vim could probably pick it up in a month. However, it took me years. This was probably due to the fact that even I have my limits when it comes to &quot;productivity hacking&quot; and Vim will really, <span class=\"italic\">really</span> decrease your productivity for a time. So I never used it much, just gave it another try here and there and eventually it stuck.</p>\n<h3>Is it worth it? </h3>\n<p>Yes, but it&#39;s not for everyone. </p>\n<p>If you write a lot of code, or even just prose, using Vim is nothing short of magical. It feels like being in the future already, when computers simply do what we think. </p>\n<p>A mouse is an imprecise device. Analog motion (i.e. your hand sliding a mouse across a desk) is relatively intuitive, but it&#39;s slow compared to directly telling the computer what you want. Anyone who&#39;s used software professionally for long enough understands this. Designers, architects, authors, anyone who uses a computer as a creative tool and uses it <span class=\"italic\">a lot</span> eventually feels the strain of repetitive interactions. That&#39;s why professional software packages have numerous hotkeys. Even your operating system has numerous hotkeys, even if you don&#39;t know them or use them much.</p>\n<p>When you&#39;re using Vim, everything is a hotkey. Every action you take you take with keys, which offers a great deal of precision and speed when it comes to editing text. </p>\n<p>A quick example. Let&#39;s say you want to select all the text &quot;here, within these quotes.&quot; What do you do? Normally, you just drag the mouse over all the text within the quotes and start typing. No problem! Now consider you have to do this many times a day, perhaps hundreds of times a day, with different text. Sometimes the text wraps around the screen, causing you to have to move your mouse further. Sometimes you accidentally drag too far or not far enough, causing you to have to hit undo and try again. This may all sound minor, but again, consider having to do it hundreds of times a day.</p>\n<p>Now, if you&#39;re a Vim user you just type <code >ci&quot;</code>. Three characters. The mnemonic for this sequence is &quot;change inner <code >&quot;</code>.&quot; The interesting thing is you can use that same <code >ci</code> &quot;change inner ...&quot; command with other characters. For instance <code >ci&#39;</code> will let you change all the text inside single quotes. <code >ci(</code> will let you change all the text inside parens, and so on. It&#39;s quite a flexible and highly productive system (once you learn it).</p>\n<h2><code >2016</code> Vim + Atom</h2>\n<p>Enter Atom. I actually don&#39;t have a lot to say about Atom. I used it as my secondary editor since, again, once you&#39;ve internalized Vim you never go back. However, Vim has a significant drawback: You have to program it to make it play nicely with new languages. That&#39;s right, you have to write code just to get your editor to let you write more code in an appealing way.</p>\n<p>This is where Atom came in. It&#39;s a mainstream text editor in the sense that it has lots of features built-in and it will do its best to help you along the way. It also has a plugin repository where you can search for new plugins that do things like support new programming languages. It even has‚Äîand this is key‚Äîa plugin to emulate Vim!</p>\n<p>So I ended up using Atom whenever I had to work with code that I hadn&#39;t yet configured Vim for. It worked out of the box, it was intuitive and it sort of supported Vim-like editing. </p>\n<p>Perhaps most importantly, at this point my company had hired other developers and as the senior member of the team I needed to be able to recommend a way to edit our codebase‚Äîthat recommendation was Atom.</p>\n<h2><code >2018</code> Vim + VSCode</h2>\n<p>So after a couple of years I decided to revisit VSCode. I honestly don&#39;t know why, but it became hugely popular and so it came across my radar again. It&#39;s a great text editor, but in my view it fills the space that Atom was in so I&#39;m not sure why anyone switched ü§∑‚Äç‚ôÇÔ∏è.</p>\n<p>Regardless, I tried it out and thought &quot;this is ok.&quot; The thing was, at this point I was a much more experienced programmer and <span class=\"bold\">really didn&#39;t want</span> to spend time not directly solving whatever problem I was working on. I had little patience for configuring text editors, so whenever I tried a new language I would just open up VSCode instead of Vim since it would either immediately work well or have a plugin I could install.</p>\n<p>VSCode still filled the space of secondary text editor until one day I discovered <a href=\"https://github.com/asvetliakov/vscode-neovim\">a plugin for VSCode that embeds Vim</a>... ü§Ø </p>\n<p>Thus the balance switched. Now I use VSCode (in Vim mode) as my primary text editor and Vim as the secondary.</p>\n<h2><code >2020</code> Vim + VSCode + Emacs</h2>\n<p>And finally we&#39;re caught up. 2020 and I&#39;m trying a new text editor. Why? Blame Clojure. Emacs and Lisp languages go very well together so I decided to try out Emacs, and it&#39;s pretty neat.</p>\n<div class=\"callout\">For anyone who doesn&#39;t know, Emacs is as old as Vim and has a similar keyboard-centric philosophy. It&#39;s also <span class=\"italic\">even more</span> customizable than Vim, which is saying quite a lot. However, Emacs is unfortunately famous for forcing your hands into contortions to use various functions. </div>\n<p>I only recently started using Emacs, so I can&#39;t actually speak to it&#39;s long-term utility but it&#39;s definitely interesting. Aside from being a lisp-based editor, which highly appeals to me, it also seems to <span class=\"italic\">fully</span> support Vim. It emulates Vim but it does it so well that as far as I can tell you get the best of both worlds.</p>\n<h1>Pursue Your Hobbies</h1>\n<p>Since I haven&#39;t exactly come to any specific point, it&#39;s fortunate I didn&#39;t start writing this intending to make one. If there was one it would simply be: Pursue your hobbies. </p>\n<p>Believe it or not fiddling with text editors brings me joy, so despite the occasional dips in productivity I continue to tinker. Besides, there&#39;s always the off chance that I&#39;ll become more productive. </p>\n\n<p>This post was discussed on Hacker News: <a href=\"https://news.ycombinator.com/item?id=24290128\">https://news.ycombinator.com/item?id=24290128</a></p>\n\n<p><a href=\"#footnate\">¬π</a> Vim has become something of a catchall term for Vi and Vim, which are separate editors. Vi was first and Vim didn&#39;t show up until the 90s. </p>","properties":{"tags":null,"created":"2020-08-20T00:00:00.000Z","title":"Editor Overload","disqusId":null}}},"pageContext":{"id":"98fe281e-46f4-543d-8a86-c94c959157c2","prev":{"id":"aa74f31e-def4-5a67-9248-90adc0644a4e","slug":"work-culture","properties":{"title":"Work Culture","created":"2020-08-20T00:00:00.000Z"}}}}}