{"componentChunkName":"component---src-templates-post-js","path":"/the-importance-of-webpack-context/","result":{"data":{"post":{"canonicalURL":"https://blog.iansinnott.com/the-importance-of-webpack-context/","content_html":"<p>Today I ran into an issue testing my <a href=\"https://github.com/iansinnott/react%E2%B8%BBstatic%E2%B8%BBwebpack%E2%B8%BBplugin\">react-static-webpack-plugin</a> plugin. I&#39;ve been running webpack builds in subdirectories of the repository and then running test assertions against the output in order to test the project. So far it&#39;s worked great, but after updating my dependencies recently I ran into a nasty error:</p>\n<pre>Error: Error: Child compilation failed:\nEntry module not found: Error: Cannot resolve &#39;file&#39; or &#39;directory&#39; ./src/routes.js in /path/to/react-static-webpack-plugin:\nError: Cannot resolve &#39;file&#39; or &#39;directory&#39; ./src/routes.js in /path/to/react-static-webpack-plugin</pre>\n<p>...ðŸ˜–</p>\n<p>Not good. But looking at the output and enabling the debug logger in my build process led me to the ultimate culprit, Webpack&#39;s context.</p>\n<p>Here&#39;s what was happening:</p>\n<ul><li>I was running build commands from the root directory of my project</li></ul>\n<ul><li>The builds I was running needed to be ran in their own subdirectory</li></ul>\n<ul><li>Building directly in the subdirectory worked fine...</li></ul>\n<ul><li>Webpack&#39;s context was getting set to the root directory no matter what</li></ul>\n<p>After looking at the <a href=\"https://webpack.github.io/docs/configuration.html#context\">Webpack docs</a> it quickly became apparent what was happening:</p>\n<p><code >context</code> in the <code >webpack.config.js</code></p>\n<blockquote>The base directory (absolute path!) for resolving the entry option. If output.pathinfo is set, the included pathinfo is shortened to this directory.\n<span class=\"bold italic\">Default:</span><span class=\"italic\"> process.cwd()</span></blockquote>\n<p>I was pretty sure I knew what <code >process.cwd()</code> would return, so I started to have a hunch. Looking at the <a href=\"https://nodejs.org/api/process.html#process_process_cwd\">Node docs</a>:</p>\n<blockquote>The process.cwd() method returns the current working directory of the Node.js process.</blockquote>\n<p>Ah, I see. Turns out that my Webpack builds which ran in subdirectories were actually searching for the entry files in the <span class=\"italic\">root</span> directory of the project.</p>\n<p>The fix was swift and effective. I added the following line to my <code >webpack.config.js</code> files:</p>\n<pre>context: __dirname</pre>","properties":{"tags":"webpack","created":"2016-11-24T00:00:00.000Z","title":"The importance of Webpack context","disqusId":null}}},"pageContext":{"id":"cd87193a-c324-5a2d-ad33-873942409391","prev":{"id":"cf6b2d41-03be-5446-9bce-81f79d5b8532","slug":"migrating-from-jekyll-to-hexo","properties":{"title":"Migrating from Jekyll to Hexo","created":"2016-11-16T00:00:00.000Z"}}}}}